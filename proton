#!/bin/bash

PROTONDIR="$HOME/.proton/proton-"
COMPDIR="$HOME/.proton/comp"
DEFAULTVERSION="7.0"

check_1_0 () {
    if [ ! -z "$2" ]; then if [ "$2" != "0" ] && [ "$2" != "1" ]; then echo; echo -e "  [\e[1;31mE\e[0m]\e[1;31m Variable $1 is not 1 or 0\e[0m"; echo; exit; fi; fi
}

check_empty () {
    if [ -z "$2" ]; then echo; echo -e "  [\e[1;33mW\e[0m]\e[1;33m Variable $1 is empty\e[0m"; fi
}

#if [ -z "$1" ]; then
#    echo
#    echo "  [\e[1;31mE\e[0m]\e[1;31m No command supplied\e[0m"
#    echo
#    exit
#fi

if [ -z "$1" ]; then
    echo
    echo -e "  [\e[1;34mi\e[0m]\e[1;34m No command supplied\e[0m"
fi

if [ ! -z "$1" ]; then
	if [ -d "$1" ]; then
	    echo
	    echo -e "  [\e[1;34mi\e[0m]\e[1;34m $(readlink -f "$1") is a folder\e[0m"
	fi
fi

if [ ! -z "$1" ]; then
	if [ ! -e "$1" ]; then
	    echo
	    echo -e "  [\e[1;33mW\e[0m]\e[1;33m File does not exist\e[0m"
	fi
fi

FILE=$(readlink -f "$1")
FOLDER=$(dirname "$FILE")
#COMPATDIR=$(basename "$FOLDER")

ENV_VERSION="$VERSION"
ENV_COMPATDIR="$COMPATDIR"
ENV_WORKINGDIR="$WORKINGDIR"
ENV_MANGOHUD="$MANGOHUD"
ENV_GAMEMODE="$GAMEMODE"
ENV_DXVK="$DXVK"
ENV_ESYNC="$ESYNC"
ENV_FSYNC="$FSYNC"
ENV_D3D10="$D3D10"
ENV_D3D11="$D3D11"

if [ ! -z "$MANGOHUD" ]; then if [ "$MANGOHUD" != "0" ] && [ "$MANGOHUD" != "1" ] && [ "$MANGOHUD" != "2" ]; then echo; echo "  [\e[1;31mE\e[0m]\e[1;31m Variable MANGOHUD is not 0, 1 or 2\e[0m"; echo; exit; fi; fi
#check_1_0 MANGOHUD $MANGOHUD
check_1_0 "GAMEMODE $GAMEMODE"
check_1_0 "DXVK" "$DXVK"
check_1_0 "ESYNC" "$ESYNC"
check_1_0 "FSYNC" "$FSYNC"
check_1_0 "D3D10" "$D3D10"
check_1_0 "D3D11" "$D3D11"

#mkdir -p "$PROTONDIR" &> /dev/null
mkdir -p "$COMPDIR" &> /dev/null

#  1 $CONF variable
#  2 exe-directory/proton.conf
#  3 exe-directory/.proton.conf
#  4 ~/proton.conf
#  5 ~/.proton.conf
#  6 ~/.config/proton.conf      (default)
#  7 ~/.config/.proton.conf

if [ -z "$CONF" ]; then
    if [ -e "$FOLDER/proton.conf" ]; then
        echo
        echo "Using $FOLDER/proton.conf"
        CONF="$FOLDER/proton.conf"
    else
        if [ -e "$FOLDER/.proton.conf" ]; then
            echo
            echo "Using $FOLDER/.proton.conf"
            CONF="$FOLDER/.proton.conf"
        else        
            if [ -e "$HOME/proton.conf" ]; then  
                echo
                echo "Using default $HOME/proton.conf"
                CONF="$HOME/proton.conf"
            else
                if [ -e "$HOME/.proton.conf" ]; then
                    echo
                    echo "Using $HOME/.proton.conf"
                    CONF="$HOME/.proton.conf"
                else
                    if [ -e "$DEFAULTCONF" ]; then  
                        echo
                        echo "Using default $DEFAULTCONF"
                        CONF="$DEFAULTCONF"
                    else
                        if [ -e "$HOME/.config/.proton.conf" ]; then  
                            echo
                            echo "Using $HOME/.config/.proton.conf"
                            CONF="$HOME/.config/.proton.conf"
                        else
                            echo
                            echo "Creating new proton config"
                            printf "VERSION=$DEFAULTVERSION\n\nCOMPATDIR=Default\n\n# If empty, the working dir is same as exe directory. Path can be absolute or relative to exe directory.\nWORKINGDIR=\n\n\n# 0: Disabled, 1: Enabled, 2: OpenGL\nMANGOHUD=0\n\nGAMEMODE=0\n\n\nDXVK=1\n\nESYNC=1\n\n# 0: Disabled, 1: Enabled, 2: Disable Futex2\nFSYNC=1\n\nD3D11=1\n\nD3D10=1" > "$HOME/.config/proton.conf"
                            echo "Using default $HOME/.config/proton.conf"
                            CONF="$HOME/.config/proton.conf"
                        fi
                    fi
                fi
            fi
        fi
    fi
else
    if [ ! -e "$CONF" ]; then
        echo
        echo "Creating new proton config"
        printf "VERSION=$DEFAULTVERSION\n\nCOMPATDIR=Default\n\n# If empty, the working dir is same as exe directory. Path can be absolute or relative to exe directory.\nWORKINGDIR=\n\n\n# 0: Disabled, 1: Enabled, 2: OpenGL\nMANGOHUD=0\n\nGAMEMODE=0\n\n\nDXVK=1\n\nESYNC=1\n\n# 0: Disabled, 1: Enabled, 2: Disable Futex2\nFSYNC=1\n\nD3D11=1\n\nD3D10=1" > "$CONF"
        echo "Using $CONF"
    else
        echo
        echo "Using $CONF"
    fi
fi

 . "$CONF"

if [ ! -z "$MANGOHUD" ]; then if [ "$MANGOHUD" != "0" ] && [ "$MANGOHUD" != "1" ] && [ "$MANGOHUD" != "2" ]; then echo; echo "  [\e[1;31mE\e[0m]\e[1;31m Variable MANGOHUD is not 0, 1 or 2\e[0m"; echo; exit; fi; fi
#check_1_0 MANGOHUD $MANGOHUD
check_1_0 "GAMEMODE $GAMEMODE"
check_1_0 "DXVK" "$DXVK"
check_1_0 "ESYNC" "$ESYNC"
check_1_0 "FSYNC" "$FSYNC"
check_1_0 "D3D10" "$D3D10"
check_1_0 "D3D11" "$D3D11"

check_empty "VERSION" "$VERSION"
check_empty "COMPATDIR" "$COMPATDIR"
check_empty "MANGOHUD" "$MANGOHUD"
check_empty "GAMEMODE" "$GAMEMODE"
check_empty "DXVK" "$DXVK"
check_empty "ESYNC" "$ESYNC"
check_empty "FSYNC" "$FSYNC"
check_empty "D3D10" "$D3D10"
check_empty "D3D11" "$D3D11"

if [ ! -z "$ENV_VERSION" ]; then VERSION="$ENV_VERSION"; fi
if [ ! -z "$ENV_COMPATDIR" ]; then COMPATDIR="$ENV_COMPATDIR"; fi
if [ ! -z "$ENV_WORKINGDIR" ]; then WORKINGDIR="$ENV_WORKINGDIR"; fi
if [ ! -z "$ENV_MANGOHUD" ]; then MANGOHUD="$ENV_MANGOHUD"; fi
if [ ! -z "$ENV_GAMEMODE" ]; then GAMEMODE="$ENV_GAMEMODE"; fi
if [ ! -z "$ENV_DXVK" ]; then DXVK="$ENV_DXVK"; fi
if [ ! -z "$ENV_ESYNC" ]; then ESYNC="$ENV_ESYNC"; fi
if [ ! -z "$ENV_FSYNC" ]; then FSYNC="$ENV_FSYNC"; fi
if [ ! -z "$ENV_D3D10" ]; then D3D10="$ENV_D3D10"; fi
if [ ! -z "$ENV_D3D11" ]; then D3D11="$ENV_D3D11"; fi

if [ -z "$VERSION" ]; then VERSION="$DEFAULTVERSION"; fi
if [ -z "$COMPATDIR" ]; then COMPATDIR="Default"; fi

if [ ! -e "$PROTONDIR$VERSION/proton" ]; then
    echo
    echo -e "  [\e[1;31mE\e[0m]\e[1;31m $PROTONDIR$VERSION/proton does not exist\e[0m"
    echo
    exit
fi

echo

if [ ! "$DXVK" = "0" ]; then echo "Using DXVK"; else echo "Using WineD3D"; fi
if [ "$MANGOHUD" = "1" ]; then echo "Using MangoHud"; fi
if [ "$MANGOHUD" = "2" ]; then echo "Using MangoHud (OpenGL)"; fi
if [ ! "$GAMEMODE" = "0" ]; then echo "Enabling GameMode"; fi
if [ "$ESYNC" = "0" ]; then echo "Disabling Esync"; fi
if [ "$FSYNC" = "0" ]; then echo "Disabling Fsync"; fi
if [ "$D3D10" = "0" ]; then echo "Disabling Direct3D 10"; fi
if [ "$D3D11" = "0" ]; then echo "Disabling Direct3D 11"; fi
if [ "$COMPATDIR" = "Default" ]; then echo "Using default compat dir"; else echo "Using compat dir $COMPATDIR"; fi
echo "Using version $VERSION"

if [ -e "$1" ]; then
	ISPATH="1"
fi

if [ -z "$WORKINGDIR" ]; then
	if [ "$ISPATH" = "1" ]; then
		echo "Using Working Directory $FOLDER"
		cd "$FOLDER"
	else
		echo "Using Working Directory $(readlink -f "./")"
	fi
else
	if [ -e "$WORKINGDIR" ]; then
		echo "Using Working Directory $(readlink -f "$WORKINGDIR")"
		cd $(readlink -f "$WORKINGDIR")
	else
		echo
		echo -e "  [\e[1;31mE\e[0m]\e[1;31m Working Directory does not exist\e[0m"
		echo
		exit
	fi
fi

echo

mkdir -p "$COMPDIR/$COMPATDIR" &> /dev/null

if [ "$ISPATH" = "1" ]; then
	echo "Copyable command:"
	echo
	echo -n env STEAM_COMPAT_DATA_PATH=\"$COMPDIR/$COMPATDIR\" env STEAM_COMPAT_CLIENT_INSTALL_PATH=\"$COMPDIR\" $(if [ "$DXVK" = "0" ]; then echo "env PROTON_USE_WINED3D=1"; fi) $(if [ "$D3D10" = "0" ]; then echo "env PROTON_NO_D3D10=1"; fi) $(if [ "$D3D11" = "0" ]; then echo "env PROTON_NO_D3D11=1"; fi) $(if [ "$FSYNC" = "0" ]; then echo "env PROTON_NO_FSYNC=1"; fi) $(if [ "$ESYNC" = "0" ]; then echo "env PROTON_NO_ESYNC=1"; fi) $(if [ ! "$GAMEMODE" = "0" ]; then echo "gamemoderun"; fi) $(if [ "$MANGOHUD" = "1" ]; then echo "mangohud"; fi) $(if [ "$MANGOHUD" = "2" ]; then echo "mangohud --dlsym"; fi) \"$PROTONDIR$VERSION/proton\" run "\"$FILE\"" "${@#$1}"
	echo
	echo
	env STEAM_COMPAT_DATA_PATH="$COMPDIR/$COMPATDIR" env STEAM_COMPAT_CLIENT_INSTALL_PATH="$COMPDIR" $(if [ "$DXVK" = "0" ]; then echo "env PROTON_USE_WINED3D=1"; fi) $(if [ "$D3D10" = "0" ]; then echo "env PROTON_NO_D3D10=1"; fi) $(if [ "$D3D11" = "0" ]; then echo "env PROTON_NO_D3D11=1"; fi) $(if [ "$FSYNC" = "0" ]; then echo "env PROTON_NO_FSYNC=1"; fi) $(if [ "$ESYNC" = "0" ]; then echo "env PROTON_NO_ESYNC=1"; fi) $(if [ ! "$GAMEMODE" = "0" ]; then echo "gamemoderun"; fi) $(if [ "$MANGOHUD" = "1" ]; then echo "mangohud"; fi) $(if [ "$MANGOHUD" = "2" ]; then echo "mangohud --dlsym"; fi) "$PROTONDIR$VERSION/proton" run "$FILE" "${@#$1}"
else
	echo "Copyable command:"
	echo
	echo -n env STEAM_COMPAT_DATA_PATH=\"$COMPDIR/$COMPATDIR\" env STEAM_COMPAT_CLIENT_INSTALL_PATH=\"$COMPDIR\" $(if [ "$DXVK" = "0" ]; then echo "env PROTON_USE_WINED3D=1"; fi) $(if [ "$D3D10" = "0" ]; then echo "env PROTON_NO_D3D10=1"; fi) $(if [ "$D3D11" = "0" ]; then echo "env PROTON_NO_D3D11=1"; fi) $(if [ "$FSYNC" = "0" ]; then echo "env PROTON_NO_FSYNC=1"; fi) $(if [ "$ESYNC" = "0" ]; then echo "env PROTON_NO_ESYNC=1"; fi) $(if [ ! "$GAMEMODE" = "0" ]; then echo "gamemoderun"; fi) $(if [ "$MANGOHUD" = "1" ]; then echo "mangohud"; fi) $(if [ "$MANGOHUD" = "2" ]; then echo "mangohud --dlsym"; fi) \"$PROTONDIR$VERSION/proton\" run "$@"
	echo
	echo
	env STEAM_COMPAT_DATA_PATH="$COMPDIR/$COMPATDIR" env STEAM_COMPAT_CLIENT_INSTALL_PATH="$COMPDIR" $(if [ "$DXVK" = "0" ]; then echo "env PROTON_USE_WINED3D=1"; fi) $(if [ "$D3D10" = "0" ]; then echo "env PROTON_NO_D3D10=1"; fi) $(if [ "$D3D11" = "0" ]; then echo "env PROTON_NO_D3D11=1"; fi) $(if [ "$FSYNC" = "0" ]; then echo "env PROTON_NO_FSYNC=1"; fi) $(if [ "$ESYNC" = "0" ]; then echo "env PROTON_NO_ESYNC=1"; fi) $(if [ ! "$GAMEMODE" = "0" ]; then echo "gamemoderun"; fi) $(if [ "$MANGOHUD" = "1" ]; then echo "mangohud"; fi) $(if [ "$MANGOHUD" = "2" ]; then echo "mangohud --dlsym"; fi) "$PROTONDIR$VERSION/proton" run "$@"
fi
